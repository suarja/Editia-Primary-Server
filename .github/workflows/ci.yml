name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run TypeScript compilation
      run: npm run build

    - name: Run tests
      run: npm run test:run
      env:
        NODE_ENV: test
        SUPABASE_URL: https://test.supabase.co
        SUPABASE_SERVICE_ROLE_KEY: test-service-role-key
        SUPABASE_ANON_KEY: test-anon-key

    - name: Run test coverage
      run: npm run test:coverage
      if: matrix.node-version == '20.x'
      env:
        NODE_ENV: test
        SUPABASE_URL: https://test.supabase.co
        SUPABASE_SERVICE_ROLE_KEY: test-service-role-key
        SUPABASE_ANON_KEY: test-anon-key

    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      if: matrix.node-version == '20.x'
      with:
        file: ./coverage/lcov.info
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Check TypeScript types
      run: npx tsc --noEmit

    - name: Check for security vulnerabilities
      run: npm audit --audit-level=high

  build:
    runs-on: ubuntu-latest
    needs: [test, lint]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Test production build
      run: |
        # Verify dist directory exists and contains expected files
        test -d dist
        test -f dist/app.js
        echo "âœ… Production build successful"